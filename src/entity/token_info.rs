//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, const_field_count::FieldCount)]
#[sea_orm(table_name = "token_info")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub type_address_id: String,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub defining_tx_hash: Vec<u8>,
    pub defining_output_index: i32,
    pub decimal: i16,
    pub name: String,
    pub symbol: String,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub udt_hash: Option<Vec<u8>>,
    #[sea_orm(column_type = "Decimal(Some((39, 0)))", nullable)]
    pub expected_supply: Option<BigDecimal>,
    #[sea_orm(column_type = "Decimal(Some((39, 0)))", nullable)]
    pub mint_limit: Option<BigDecimal>,
    pub mint_status: Option<i16>,
    pub inscription_address_id: Option<String>,
    pub block_number: i64,
    pub tx_timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

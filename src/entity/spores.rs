//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.10

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, const_field_count::FieldCount)]
#[sea_orm(table_name = "spores")]
pub struct Model {
    #[sea_orm(
        primary_key,
        auto_increment = false,
        column_type = "VarBinary(StringLen::None)"
    )]
    pub spore_id: Vec<u8>,
    pub content_type: Option<String>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub content: Option<Vec<u8>>,
    #[sea_orm(column_type = "VarBinary(StringLen::None)", nullable)]
    pub cluster_id: Option<Vec<u8>>,
    pub owner_address_id: Option<String>,
    pub type_address_id: String,
    pub is_burned: bool,
    pub created_at_block_number: i64,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub created_at_tx_hash: Vec<u8>,
    pub created_at_output_index: i32,
    pub created_at_timestamp: DateTime,
    pub last_updated_at_block_number: i64,
    #[sea_orm(column_type = "VarBinary(StringLen::None)")]
    pub last_updated_at_tx_hash: Vec<u8>,
    pub last_updated_at_timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}

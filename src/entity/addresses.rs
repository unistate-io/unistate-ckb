//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "addresses")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub script_code_hash: Vec<u8>,
    pub script_hash_type: i16,
    #[sea_orm(column_type = "Binary(BlobSize::Blob(None))")]
    pub script_args: Vec<u8>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::clusters::Entity")]
    Clusters,
    #[sea_orm(has_many = "super::spores::Entity")]
    Spores,
}

impl Related<super::clusters::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Clusters.def()
    }
}

impl Related<super::spores::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Spores.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
